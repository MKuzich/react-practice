{"version":3,"file":"static/js/397.fa972f2e.chunk.js","mappings":"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","sources":["services/currencyApi.ts","pages/Converter/Field.tsx","../node_modules/react-bootstrap/esm/Table.js","pages/Converter/Converter.styled.tsx","pages/Converter/CurrencyTable.tsx","pages/Converter/Converter.tsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL =\n  'https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json';\n\nexport const getCurrencyExchangeRate = async () => {\n  try {\n    const res = await axios.get(BASE_URL);\n    return res.data;\n  } catch (error) {\n    return error;\n  }\n};\n","import React from 'react';\nimport { ICurrency } from '../../types/currency';\nimport { Form, Stack } from 'react-bootstrap';\n\ninterface IProps {\n  name: string;\n  rates: ICurrency[];\n  value: number;\n  currency: string;\n  id: string;\n  onChangeHandler: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onSelectHandler: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n}\n\nexport const Field: React.FC<IProps> = ({\n  rates,\n  value,\n  currency,\n  onChangeHandler,\n  onSelectHandler,\n  name,\n  id,\n}) => {\n  return (\n    <div>\n      <p className=\"text-center mb-2\">{name}</p>\n      <Stack direction=\"horizontal\" gap={2}>\n        <Form.Control\n          type=\"text\"\n          value={Math.round(value * 100) / 100}\n          onChange={onChangeHandler}\n        />\n        <Form.Select onChange={onSelectHandler} value={currency}>\n          {rates.map(({ cc }) => (\n            <option key={cc + id} value={cc}>\n              {cc}\n            </option>\n          ))}\n        </Form.Select>\n      </Stack>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  display: inline-block;\n`;\n","import React from 'react';\nimport { ICurrency } from '../../types/currency';\nimport Table from 'react-bootstrap/Table';\nimport { Title } from './Converter.styled';\n\ninterface IProps {\n  rates: ICurrency[];\n}\n\nexport const CurrencyTable: React.FC<IProps> = ({ rates }) => {\n  return (\n    <>\n      <Title className=\"text-center my-4\">\n        Currency exchange rates at {rates[1]?.exchangedate} from National Bank\n        of Ukraine\n      </Title>\n      <Table striped variant=\"dark\">\n        <thead>\n          <tr>\n            <th className=\"text-center\">Currency</th>\n            <th className=\"text-center\">Rate to UAH</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rates.map(({ cc, rate }) => {\n            if (cc === 'UAH') {\n              return <></>;\n            }\n            return (\n              <tr key={cc}>\n                <td className=\"text-center\">{cc}</td>\n                <td className=\"text-center\">{rate}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getCurrencyExchangeRate } from '../../services/currencyApi';\nimport { ICurrency } from '../../types/currency';\nimport { Field } from './Field';\nimport { Container, Stack, Button } from 'react-bootstrap';\nimport { CurrencyTable } from './CurrencyTable';\nimport { Title } from './Converter.styled';\nimport { FaExchangeAlt } from 'react-icons/fa';\n\nconst hrivna: ICurrency = {\n  cc: 'UAH',\n  rate: 1,\n  txt: 'Українська гривня',\n  exchangedate: 'all time',\n};\n\nconst Converter: React.FC = () => {\n  const [rates, setRates] = useState<ICurrency[]>([]);\n  const [firstValue, setFirstValue] = useState<number>(0);\n  const [secondValue, setSecondValue] = useState<number>(0);\n  const [firstCurrency, setFirstCurrency] = useState<string>('UAH');\n  const [secondCurrency, setSecondCurrency] = useState<string>('USD');\n\n  useEffect(() => {\n    getCurrencyExchangeRate().then(res => {\n      setRates([hrivna, ...res]);\n    });\n  }, []);\n\n  useEffect(() => {}, [firstCurrency]);\n\n  const onFirstSelectHandler = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setFirstCurrency(e.target.value);\n  };\n\n  const onFirstChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const firstAmount = Number(e.target.value);\n    if (firstAmount >= 0) {\n      setFirstValue(firstAmount);\n      const firstRate = rates.find(el => el.cc === firstCurrency)?.rate!;\n      const secondRate = rates.find(el => el.cc === secondCurrency)?.rate!;\n      const secondAmount = (firstAmount * firstRate) / secondRate;\n      setSecondValue(secondAmount);\n    }\n  };\n\n  const onSecondSelectHandler = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSecondCurrency(e.target.value);\n  };\n\n  const onSecondChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const secondAmount = Number(e.target.value);\n    if (secondAmount >= 0) {\n      setSecondValue(secondAmount);\n      const firstRate = rates.find(el => el.cc === firstCurrency)?.rate!;\n      const secondRate = rates.find(el => el.cc === secondCurrency)?.rate!;\n      const firstAmount = (secondAmount * secondRate) / firstRate;\n      setFirstValue(firstAmount);\n    }\n  };\n\n  const onBtnClickHandler = () => {\n    const tempValue = firstValue;\n    const tempCurrency = firstCurrency;\n    setFirstValue(secondValue);\n    setSecondValue(tempValue);\n    setFirstCurrency(secondCurrency);\n    setSecondCurrency(tempCurrency);\n  };\n\n  return (\n    <Container>\n      <section>\n        <h1 className=\"text-center my-3\">Currency exchange rates</h1>\n        <div className=\"d-flex flex-column align-items-center\">\n          <Title className=\"text-center mb-3\">Currency converter</Title>\n          <div className=\"border border-dark rounded-3 border-opacity-75\">\n            <Stack className=\"p-3\" direction=\"horizontal\" gap={3}>\n              <Field\n                name=\"I have\"\n                rates={rates}\n                value={firstValue}\n                currency={firstCurrency}\n                id=\"1\"\n                onChangeHandler={onFirstChangeHandler}\n                onSelectHandler={onFirstSelectHandler}\n              />\n              <Button\n                variant=\"light\"\n                type=\"button\"\n                className=\"mt-auto px-2 py-1\"\n                onClick={onBtnClickHandler}\n              >\n                <FaExchangeAlt size=\"26px\" />\n              </Button>\n              <Field\n                name=\"I will receive\"\n                rates={rates}\n                value={secondValue}\n                currency={secondCurrency}\n                id=\"2\"\n                onChangeHandler={onSecondChangeHandler}\n                onSelectHandler={onSecondSelectHandler}\n              />\n            </Stack>\n          </div>\n        </div>\n        <CurrencyTable rates={rates} />\n      </section>\n    </Container>\n  );\n};\n\nexport default Converter;\n"],"names":["getCurrencyExchangeRate","axios","res","data","Field","rates","value","currency","onChangeHandler","onSelectHandler","name","id","className","Stack","direction","gap","Form","type","Math","round","onChange","map","cc","React","ref","bsPrefix","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","Title","styled","CurrencyTable","exchangedate","rate","hrivna","txt","useState","setRates","firstValue","setFirstValue","secondValue","setSecondValue","firstCurrency","setFirstCurrency","secondCurrency","setSecondCurrency","useEffect","then","Container","e","firstAmount","Number","target","firstRate","find","el","secondRate","Button","onClick","tempValue","tempCurrency","secondAmount"],"sourceRoot":""}